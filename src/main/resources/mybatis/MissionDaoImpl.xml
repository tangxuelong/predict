<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mission">
    <resultMap id="missionMap" type="mission">
        <result column="MISSION_ID" property="missionId" jdbcType="BIGINT"/>
        <result column="KEY_INFO" property="keyInfo" jdbcType="VARCHAR"/>
        <result column="MISSION_TYPE" property="missionType" jdbcType="INTEGER"/>
        <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
        <result column="STATUS" property="status" jdbcType="INTEGER"/>
        <result column="CLASS_ID" property="classId" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        MISSION_ID, KEY_INFO, MISSION_TYPE, REMARK, STATUS, CLASS_ID, CREATE_TIME, UPDATE_TIME
    </sql>

    <insert id="insert" parameterType="mission">
        INSERT INTO TB_MISSION (KEY_INFO, MISSION_TYPE, REMARK, STATUS, CLASS_ID, CREATE_TIME)
        VALUES(#{keyInfo,jdbcType=VARCHAR}, #{missionType,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
        #{status, jdbcType=INTEGER}, #{classId, jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertBatchForCollect" parameterType="java.util.List">
        <foreach collection="missionList" item="item" open="" close="" separator=";">
            INSERT INTO TB_MISSION (KEY_INFO, MISSION_TYPE, REMARK, STATUS, CLASS_ID, CREATE_TIME)
            VALUES(#{item.keyInfo,jdbcType=VARCHAR}, #{item.missionType,jdbcType=INTEGER},
            #{item.remark,jdbcType=VARCHAR}, #{item.status, jdbcType=INTEGER}, #{item.classId, jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <select id="getTaskById" resultMap="missionMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_MISSION
        WHERE MISSION_ID = #{missionId,jdbcType=BIGINT}
    </select>

    <select id="getPartMissionByKeyInfo" resultMap="missionMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_MISSION
        WHERE KEY_INFO LIKE CONCAT(#{partKeyInfo, jdbcType=VARCHAR}, '%')
        limit 1
    </select>

    <select id="getSlaveMissionByClassId" parameterType="map" resultMap="missionMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_MISSION WHERE CLASS_ID = #{classId, jdbcType=VARCHAR} AND MISSION_TYPE =
        #{missionType,jdbcType=INTEGER} AND STATUS = #{missionStatus,jdbcType=INTEGER}
    </select>


    <select id="getCountByClassIdAndStatus" parameterType="map" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM TB_MISSION WHERE CLASS_ID = #{classId, jdbcType=VARCHAR} AND MISSION_TYPE =
        #{missionType,jdbcType=INTEGER} AND STATUS = #{missionStatus,jdbcType=INTEGER}
    </select>

    <update id="updateMissionStatus" parameterType="java.util.Map">
        UPDATE TB_MISSION
        SET STATUS = #{setStatus, jdbcType=INTEGER}
        WHERE MISSION_ID = #{missionId,jdbcType=BIGINT} AND STATUS = #{status, jdbcType=INTEGER}
    </update>

    <update id="updateMissionStatusByPartKey" parameterType="map">
        UPDATE TB_MISSION SET STATUS = #{setStatus, jdbcType=INTEGER} WHERE KEY_INFO LIKE
        CONCAT(#{partKey, jdbcType=VARCHAR}, '%')  AND STATUS = #{originStatus, jdbcType=INTEGER}
    </update>


    <!--below sql are only used for testing purpose-->
    <select id="getMissionByKeyInfo" parameterType="java.util.Map" resultMap="missionMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_MISSION
        WHERE KEY_INFO = #{keyInfo,jdbcType=BIGINT} AND MISSION_TYPE = #{missionType,jdbcType=INTEGER}
    </select>

    <select id="getSlaveMissionsByDate" parameterType="java.util.Map" resultMap="missionMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM TB_MISSION
        WHERE <![CDATA[CREATE_TIME <= #{date,jdbcType=TIMESTAMP}]]>
        ORDER BY CREATE_TIME DESC
    </select>

    <insert id="insert2Bak" parameterType="mission">
        INSERT INTO TB_MISSION_BAK (MISSION_ID, KEY_INFO, MISSION_TYPE, REMARK, STATUS, CLASS_ID, CREATE_TIME,
        UPDATE_TIME)
        VALUES(#{missionId, jdbcType=BIGINT}, #{keyInfo,jdbcType=VARCHAR}, #{missionType,jdbcType=INTEGER},
        #{remark,jdbcType=VARCHAR}, #{status, jdbcType=INTEGER}, #{classId, jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <delete id="deleteCompleteMissionById" parameterType="java.util.Map">
        DELETE FROM TB_MISSION
        WHERE MISSION_ID = #{missionId,jdbcType=BIGINT}
    </delete>

    <select id="getSlaveBakMissionById" parameterType="java.util.Map" resultMap="missionMap">
        SELECT * FROM TB_MISSION
        WHERE MISSION_ID = #{missionId,jdbcType=BIGINT}
    </select>

    <select id="getSlaveMissionIdsByTaskType" resultType="java.lang.Long" parameterType="java.util.Map">
        SELECT MISSION_ID
        FROM TB_MISSION
        WHERE MISSION_TYPE = #{missionType,jdbcType=INTEGER} AND STATUS = #{status, jdbcType=INTEGER}
        <!--AND <![CDATA[CREATE_TIME >= #{date,jdbcType=TIMESTAMP}]]>-->
    </select>

    <select id="getMonitorRefundMission" resultType="java.lang.Long" parameterType="java.util.Map">
        SELECT MISSION_ID
        FROM TB_MISSION
        WHERE MISSION_TYPE = 1 AND STATUS = 0
    </select>

</mapper>